@page "/cargarempleados"
@using Abonap.Users;

@inject NavigationManager Navigation
@inject IJSRuntime jsRuntime
@inject HttpClient http
@inject AppState appState

@inject NavigationManager navigation

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1> <i class="fa fa-file" /> Import Colaboradores</h1>
                <p style="margin:1em 2em" class="label-default">

                    Importar y/o actualizar colaboradores desde un archivo de Excel

                </p>
                @Message
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/empleados"> <i class="fa fa-reply" /> Back</a></li>
                    <li class="breadcrumb-item active">Super Asociado</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <div class="row">
     
            <div class="col-md-12" style="max-width:1000px; margin:0em auto 1em auto">
                <div class="card card-primary card-outline card-tabs">
                    <div class="card-header">
                        
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                           
                        </div>
                    </div>


                    <div class="card-body table-responsive p-0">
                        <table id="tbroles" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Cedula</th>
                                    <th>Nombre Colaborador</th>
                                    <th>Puesto</th>
                                    <th>Email</th>
                                    <th>Telefono</th>
                                    <th>Fecha Ingreso</th>
                                    <th>Salario</th>
                                    <th>
                                        <button type="button" class="btn btn-outline-success btn-sm" @onclick="(()=>OpenModal( new UserRol(), 0))">
                                            <i class="fas fa-upload"></i> Excel
                                        </button>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                     <div class="card-footer">
                </div>

                </div>


                <div class="modal fade @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                    <div id="dv-overlay">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="modalTitle"> Cargar lista de colaboradores</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="CloseModal">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>

                                
                                    <div class="modal-body">


                                        <div id="actions" class="row">

                                            <div class="btn-group w-100" style="margin:3em 1em">

                                                <button type="submit" class="btn btn-outline-success col start">
                                                    <i class="fas fa-upload"></i>
                                                    <span>Seleccione el archivo de excel a cargar</span>
                                                </button>



                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer">
                                        <button id="btnSave" type="submit" class="btn btn-primary">Cargar</button>
                                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cerrar</button>
                                    </div>
                            </div>
                        </div>
                    </div>
                </div>





            </div>
        </div>

    </div>

</section>

@code {

    UserRol rol = new UserRol();

    public async Task OpenModal(UserRol reg, int _action)
    {
        action = _action;
        rol = reg;

        Console.WriteLine(JsonSerializer.Serialize(rol));
        ModalDisplay = "block;";
        await Task.Delay(100);
        ModalClass = "show";
        StateHasChanged();
    }

    private async void CheckChanged()
    {
        loading = true;
        await Task.Delay(450);
        Reg.Rnc = "101796822";
        Reg.Nombre = "GRUPO RAMOS SA";
        Reg.RazonSocial = "VENTA AL POR MENOR EN HIPERMER";
        Reg.Fecha = "14/01/1999";
        Reg.EstatusDGII = "ACTIVO";
        loading = false;
        await InvokeAsync(StateHasChanged);
    }

    private async void HandleSubmit()
    {
        loading = true;
        await Task.Delay(450);
        navigation.NavigateTo("asociado");
    }

}


@code {

    Model.Asociado Reg = new Model.Asociado { Rnc = "" };


    string usr = string.Empty;

    bool loading = true;
    private Abonap.Users.User user = new Abonap.Users.User();
    string Message = ""; IJSObjectReference module;
    private List<ListApp> apps = new List<ListApp>();
    private List<DataItem> roles = new List<DataItem>();
    int action = 0;

    protected override async Task OnInitializedAsync()
    {
        Reg.Rnc = "101796822";
        Reg.Nombre = "GRUPO RAMOS SA";
        Reg.RazonSocial = "VENTA AL POR MENOR EN HIPERMER";
        Reg.Fecha = "14/01/1999";
        Reg.EstatusDGII = "ACTIVO";

        Reg.NombreUsuario = "Argelia Monegro Castro";
        Reg.Puesto = " Gerente Senior de Productos";
        Reg.Telefono = "829-470-2865";
        Reg.Email = "amonegro@abonap.com.do";

        loading = false;
        await InvokeAsync(StateHasChanged);
    }

    private string ModalDisplay = "", ModalClass = "";

    public async Task CloseModal()
    {
        ModalClass = "";
        await Task.Delay(250);
        ModalDisplay = "none;";
    }


    FileData fileData = new FileData();

    private async Task OnFileSelection(InputFileChangeEventArgs e)
    {
        Message = "";

        //visible = "block";

        if (!EnterpriseApp.Shared.Tools.IsImage(e.File.Name))
        {
            Message = "Seleccione una imagen valida.  "; //visible = "none";

            await module.InvokeAsync<bool>("showMsg", "error", "Seleccione una imagen valida.  ");

            return;

        }

        string imageType = e.File.ContentType;
        var resizedImage = await e.File.RequestImageFileAsync(imageType, 466, 248);
        var buffers = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffers);

        var res = await http.PostAsJsonAsync($"/api/User/Firma/{appState.UserName}/{user.Username}",
        Convert.ToBase64String(buffers));

        var postContent = (await res.Content.ReadAsStringAsync()).Replace("\"", "");

        if (!res.IsSuccessStatusCode)
        {
            Message = postContent;
            await module.InvokeAsync<bool>("showMsg", "error", "Error cargando la firma");
        }
        else
        {
            Message = "";
            user.Signature = postContent;
            await module.InvokeAsync<bool>("showMsg", "success", "Firma guardada.");
        }

        //visible = "none";
        StateHasChanged();
    }

    private Cfirma Fmodal { get; set; } = new Cfirma();

    private async Task Mfirma()
    {
        await Fmodal.Open();
    }

    public async Task getImage()
    {
        if (loading) { return; }
        await module.InvokeAsync<bool>("getImage");
    }

}
